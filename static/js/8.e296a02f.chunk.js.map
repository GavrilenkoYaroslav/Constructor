{"version":3,"sources":["assets/css/PostsPage.module.css","assets/css/Post.module.css","components/Post.jsx","api/API.js","pages/PostsPage.jsx"],"names":["module","exports","Post","title","text","id","short","history","useHistory","onClick","push","className","styles","postWrapper","postText","slice","split","join","api","axios","create","baseURL","headers","postAPI","get","then","res","data","PostsPage","useState","loading","setLoading","posts","setPosts","post","setPost","params","useParams","useEffect","getAll","a","response","console","error","getSingle","postsPageBody","Preloader","length","postsContainer","map","gridWrap","body","Object","keys","width","centered","visible","onCancel","footer"],"mappings":"6GACAA,EAAOC,QAAU,CAAC,cAAgB,iCAAiC,eAAiB,kCAAkC,SAAW,8B,oBCAjID,EAAOC,QAAU,CAAC,YAAc,0BAA0B,MAAQ,oBAAoB,SAAW,yB,kJCGpFC,EAAO,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,GAAIC,EAAW,EAAXA,MAC7BC,EAAUC,cAEhB,OACI,sBAAKC,QAAU,kBAAMF,EAAQG,KAAR,iBAAuBL,KAAQM,UAAWC,IAAOC,YAAtE,UACI,sBAAMF,UAAWC,IAAOT,MAAxB,SACKA,IAEL,sBAAMQ,UAAWC,IAAOE,SAAxB,SACOR,EAAQF,EAAKW,MAAM,GAAGC,MAAM,IAAK,IAAIC,KAAK,OAASb,Q,SCVhEc,E,OAAMC,EAAMC,OAAO,CACrBC,QAAS,wCACTC,QAAS,CACL,eAAgB,sBAIXC,EAAU,WAGhB,OAAOL,EAAIM,IAAI,UAAUC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAHnCJ,EAAU,SAMLlB,GACX,OAAOa,EAAIM,IAAJ,iBAAkBnB,IAAMoB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,S,SC+DvCC,UAxEG,WACd,IAAMrB,EAAUC,cADI,EAEUqB,oBAAS,GAFnB,mBAEbC,EAFa,KAEJC,EAFI,OAGMF,mBAAS,IAHf,mBAGbG,EAHa,KAGNC,EAHM,OAIIJ,mBAAS,IAJb,mBAIbK,EAJa,KAIPC,EAJO,KAKdC,EAASC,cAmCf,OAjCAC,qBAAU,WACN,IAAMC,EAAM,uCAAG,4BAAAC,EAAA,6DACXT,GAAW,GADA,kBAGgBR,IAHhB,OAGDkB,EAHC,OAIPR,EAASQ,GAJF,gDAMPC,QAAQC,MAAR,MANO,yBAQPZ,GAAW,GARJ,4EAAH,qDAYNa,EAAS,uCAAG,WAAOvC,GAAP,eAAAmC,EAAA,6DACdT,GAAW,GADG,kBAGaR,EAAsBlB,GAHnC,OAGJoC,EAHI,OAIVN,EAAQM,GAJE,gDAMVC,QAAQC,MAAR,MANU,yBAQVZ,GAAW,GARD,4EAAH,sDAYXK,EAAO/B,GACPuC,EAAUR,EAAO/B,IAEjBkC,MAGL,CAACH,EAAO/B,KAGP,sBAAKM,UAAWC,IAAOiC,cAAvB,UACKf,GAAW,cAACgB,EAAA,EAAD,MAERd,EAAMe,QACV,qBAAKpC,UAAWC,IAAOoC,eAAvB,SACKhB,EAAMiB,KAAI,SAAAf,GAAI,OACX,qBAAmBvB,UAAWC,IAAOsC,SAArC,SACA,cAAC,EAAD,CAAM5C,OAAK,EACLD,GAAI6B,EAAK7B,GACTD,KAAM8B,EAAKiB,KACXhD,MAAO+B,EAAK/B,SAJR+B,EAAK7B,SASrB+B,EAAO/B,MAAQ+C,OAAOC,KAAKnB,GAAMa,QAEnC,cAAC,IAAD,CAAOO,MAAO,IACPC,UAAQ,EACRC,QAASpB,EAAO/B,GAChBoD,SAAU,kBAAMlD,EAAQG,KAAK,WAC7BgD,OAAQ,KACRvD,MAAO,KALd,SAOI,cAAC,EAAD,CAAMA,MAAO+B,EAAK/B,MAAOC,KAAM8B,EAAKiB,KAAM9C,GAAI6B,EAAK7B","file":"static/js/8.e296a02f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsPageBody\":\"PostsPage_postsPageBody__1ZSOq\",\"postsContainer\":\"PostsPage_postsContainer__2NNX3\",\"gridWrap\":\"PostsPage_gridWrap__2qclJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postWrapper\":\"Post_postWrapper__1V9ck\",\"title\":\"Post_title__fg-Mz\",\"postText\":\"Post_postText___wpkA\"};","import React from 'react';\r\nimport styles from '../assets/css/Post.module.css';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport const Post = ({title, text, id, short}) => {\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <div onClick={ () => history.push(`/posts/${id}`) } className={styles.postWrapper}>\r\n            <span className={styles.title}>\r\n                {title}\r\n            </span>\r\n            <span className={styles.postText}>\r\n                {!!short ? text.slice(0).split(' ', 15).join(' | ') : text}\r\n            </span>\r\n        </div>\r\n    );\r\n};","import axios from \"axios\";\r\n\r\n\r\nconst api = axios.create({\r\n    baseURL: 'https://jsonplaceholder.typicode.com/',\r\n    headers: {\r\n        \"Content-Type\": \"application/json\",\r\n    },\r\n});\r\n\r\nexport const postAPI = {\r\n\r\n    getAllPosts() {\r\n       return api.get('/posts').then(res => res.data);\r\n    },\r\n\r\n    getSinglePost(id) {\r\n       return api.get(`/posts/${id}`).then(res => res.data);\r\n    },\r\n\r\n};","import React, {useEffect, useState} from 'react';\r\nimport {useParams, useHistory} from 'react-router-dom';\r\nimport styles from '../assets/css/PostsPage.module.css';\r\nimport {Preloader} from \"../components/Preloader\";\r\nimport {Post} from \"../components/Post\";\r\nimport {postAPI} from '../api/API';\r\nimport {Modal} from \"antd\";\r\n\r\nconst PostsPage = () => {\r\n    const history = useHistory();\r\n    const [loading, setLoading] = useState(false);\r\n    const [posts, setPosts] = useState([]);\r\n    const [post, setPost] = useState({});\r\n    const params = useParams();\r\n\r\n    useEffect(() => {\r\n        const getAll = async () => {\r\n            setLoading(true);\r\n            try {\r\n                const response = await postAPI.getAllPosts();\r\n                setPosts(response)\r\n            } catch (e) {\r\n                console.error(e)\r\n            } finally {\r\n                setLoading(false)\r\n            }\r\n        };\r\n\r\n        const getSingle = async (id) => {\r\n            setLoading(true);\r\n            try {\r\n                const response = await postAPI.getSinglePost(id);\r\n                setPost(response);\r\n            } catch (e) {\r\n                console.error(e)\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        if (params.id) {\r\n            getSingle(params.id);\r\n        } else {\r\n            getAll();\r\n        }\r\n\r\n    }, [params.id]);\r\n\r\n    return (\r\n        <div className={styles.postsPageBody}>\r\n            {loading && <Preloader/>}\r\n\r\n            {(!!posts.length) &&\r\n            <div className={styles.postsContainer}>\r\n                {posts.map(post =>\r\n                    <div key={post.id} className={styles.gridWrap}>\r\n                    <Post short\r\n                          id={post.id}\r\n                          text={post.body}\r\n                          title={post.title}/>\r\n                    </div>)}\r\n            </div>}\r\n\r\n\r\n            {(params.id && !!Object.keys(post).length) &&\r\n\r\n            <Modal width={600}\r\n                   centered\r\n                   visible={params.id}\r\n                   onCancel={() => history.push('/posts')}\r\n                   footer={null}\r\n                   title={null}\r\n            >\r\n                <Post title={post.title} text={post.body} id={post.id}/>\r\n            </Modal>}\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default PostsPage;"],"sourceRoot":""}